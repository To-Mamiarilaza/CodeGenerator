import axios from "axios";
import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";

export default function #className#Form() {
  const navigate = useNavigate();
  const { id } = useParams();
  const [error, setError] = useState(null);
  #fkSelectOptionsState#
  #fieldValueState#

  document.title = "Nouvelle #className#";
  document.body.style.backgroundColor = "#161616";

  // #typeFieldName#s data api url
  const API_BASE_URL = "#apiUrl#";

  // fetching all foreign key and #typeFieldName# if edit
  useEffect(() => {
    #fkElementsFetching#

    if (id !== undefined) {
      axios
        .get(API_BASE_URL + "/#typeFieldName#s/" + id)
        .then((response) => {#fieldValueSetting#
        })
        .catch((error) => {
          setError(error.message);
        });
    }
  }, []);
  #handleFkSelectOptionsChange#

  // save the #typeFieldName#
  const save#className# = (e) => {
    e.preventDefault();

    const new#className# = {#objectJsonTemplate#
    };

    if (id === undefined) {
      axios
      .post(API_BASE_URL + "/#typeFieldName#s", new#className#)
        .then((response) => {
          navigate("/#typeFieldName#s");
        })
        .catch((error) => {
          setError(error.message);
        });
      } else {
      axios
        .put(API_BASE_URL + "/#typeFieldName#s/" + id, new#className#)
        .then((response) => {
          navigate("/#typeFieldName#s");
        })
        .catch((error) => {
          setError(error.message);
        });
    }
  };
  #fkOptionsRowDisplay#

  return (
    <>
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
          crossorigin="anonymous"
        />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
          integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer"
        />
      </head>

      <nav class="navbar navbar-dark bg-dark">
        <div class="container-fluid">
          <span class="navbar-brand mb-0 h1 ms-5">
            <i class="fas fa-kiwi-bird me-4"></i>Lazy coding
          </span>
        </div>
      </nav>

      <div class="container mt-4" data-bs-theme="dark">
        <div class="mx-auto col-md-8 px-3 mb-4">
          <h4 class="text-white">Nouvelle #typeFieldName#</h4>
          <div class="form">
            <form>#formInput#

              { error !== null && (
                <div class="mb-3">
                  <label class="form-label text-danger">
                    {error}
                  </label>
                </div>
              )}

              <div class="d-flex mt-4">
                <button
                  class="btn btn-outline-info px-5 me-3"
                  onClick={(e) => save#className#(e)}
                >
                  Enregistrer
                </button>
                <button
                  class="btn btn-outline-light px-5"
                  onClick={() => navigate("/#typeFieldName#s")}
                >
                  Retour
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </>
  );
}
